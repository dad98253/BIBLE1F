	SUBROUTINE CHPWRD ( I1ARAY , LEN , IAD )
	CHARACTER*(*)I1ARAY
	CHARACTER*2 CHIX 
	INTEGER*2 I2IXC
	EQUIVALENCE ( I2IXC , CHIX ) 
C 
	IF ( MOD ( LEN , 2 ) .NE. 0 ) STOP 8989
C 
	INA = IAD - 1
	DO 100 I = 1 , LEN , 2 
	    INA = INA + 1
	    CHIX(1:1) = I1ARAY(I:I)
	    CHIX(2:2) = I1ARAY(I+1:I+1)
	    CALL PUTWRD ( I2IXC , INA )
  100	CONTINUE
	RETURN 
	END
	SUBROUTINE I1PWRD ( I1ARAY , LEN , IAD ) 
	INTEGER*1 I1ARAY(LEN) , I1IX1
	DIMENSION I1IX1(2) 
	INTEGER*2 I2IX1
	EQUIVALENCE ( I2IX1 , I1IX1 )
C 
	IF ( MOD ( LEN , 2 ) .NE. 0 ) STOP 8989
C 
	INA = IAD - 1
	DO 100 I = 1 , LEN , 2 
	    INA = INA + 1
	    I1IX1(1) = I1ARAY(I) 
	    I1IX1(2) = I1ARAY(I+1) 
	    CALL PUTWRD ( I2IX1 , INA )
  100	CONTINUE
	RETURN 
	END
	SUBROUTINE I4PWRD ( I4WRD , IAD )
	INTEGER*4 I4WRD , I4IX4
	INTEGER*2 I2IX4(2) 
	EQUIVALENCE ( I2IX4 , I4IX4 )
	I4IX4 = I4WRD
	CALL PUTWRD ( I2IX4(1) , IAD ) 
	CALL PUTWRD ( I2IX4(2) , IAD + 1 ) 
	RETURN 
	END
	SUBROUTINE CHGWRD ( I1ARAY , LEN , IAD ) 
	CHARACTER*(*)I1ARAY
	CHARACTER*2 CHIX 
	INTEGER*2 I2IXC
	EQUIVALENCE ( I2IXC , CHIX ) 
C 
	IF ( MOD ( LEN , 2 ) .NE. 0 ) STOP 8989
	INA = IAD - 1
	DO 100 I = 1 , LEN , 2 
	    INA = INA + 1
	    CALL GETWRD ( I2IXC , INA )
	    I1ARAY(I:I) = CHIX(1:1)
	    I1ARAY(I+1:I+1) = CHIX(2:2)
  100	CONTINUE
	RETURN 
	END
	SUBROUTINE I1GWRD ( I1ARAY , LEN , IAD ) 
	INTEGER*1 I1ARAY(LEN) , I1IX1(2) 
	INTEGER*2 I2IX1
	EQUIVALENCE ( I2IX1 , I1IX1 )
C 
	IF ( MOD ( LEN , 2 ) .NE. 0 ) STOP 8989
	INA = IAD - 1
	DO 100 I = 1 , LEN , 2 
	    INA = INA + 1
	    CALL GETWRD ( I2IX1 , INA )
	    I1ARAY(I) = I1IX1(1) 
	    I1ARAY(I+1) = I1IX1(2) 
  100	CONTINUE
	RETURN 
	END
	SUBROUTINE I4GWRD ( I4WRD , IAD )
	INTEGER*4 I4WRD , I4IX2
	INTEGER*2 I2IX2(2) 
	EQUIVALENCE ( I2IX2 , I4IX2 )
	CALL GETWRD ( I2IX2(1) , IAD ) 
	CALL GETWRD ( I2IX2(2) , IAD + 1 ) 
	I4WRD = I4IX2
	RETURN 
	END
	SUBROUTINE GETWRD ( IHS , IAD )
	COMMON /BUF/ I2IX(256) , LASTAD , IRECIN , IRMOD , I2ZERO
	INTEGER*2 I2ZERO 
	INTEGER*2 I2IX 
	INTEGER*2 IHS
	IND = MOD ( IAD - 1 , 256 ) + 1
	IRECN = ( IAD - 1 ) / 256 + 1
	IF ( IRECN .NE. IRECIN ) THEN
	    IF ( IRMOD .NE. 0 ) WRITE ( 10 , REC = IRECIN ) I2IX 
	    IRECIN = IRECN 
	    READ ( 10 , REC = IRECIN ) I2IX
	    IRMOD = 0
	END IF 
	IHS = I2IX(IND)
	RETURN 
	END
	SUBROUTINE PUTWRD ( IHS , IAD )
	COMMON /BUF/ I2IX(256) , LASTAD , IRECIN , IRMOD , I2ZERO
	INTEGER*2 I2ZERO 
	INTEGER*2 I2IX 
	INTEGER*2 IHS
	IF ( IAD .LE. LASTAD ) THEN
	    IND = MOD ( IAD - 1 , 256 ) + 1
	    IRECN = ( IAD - 1 ) / 256 + 1
	    IF ( IRECN .NE. IRECIN ) THEN
		IF ( IRMOD .NE. 0 ) WRITE ( 10 , REC = IRECIN ) I2IX
		IRECIN = IRECN
		READ ( 10 , REC = IRECIN ) I2IX 
	    END IF 
	    IRMOD = 1
	    I2IX(IND) = IHS
	    RETURN 
	ELSE 
	    IND = MOD ( LASTAD - 1 , 256 ) + 1 
	    IRECN = ( LASTAD - 1 ) / 256 + 1 
	    IF ( IRECN .NE. IRECIN ) THEN
		IF ( IRMOD .NE. 0 ) WRITE ( 10 , REC = IRECIN ) I2IX
		IRECIN = IRECN
		READ ( 10 , REC = IRECIN ) I2IX 
	    END IF 
	    DO 100 IADX = LASTAD + 1 , IAD 
		IND = MOD ( IADX - 1 , 256 ) + 1
		IRECN = ( IADX - 1 ) / 256 + 1
		IF ( IRECN .NE. IRECIN ) THEN 
		    IF ( IRMOD .NE. 0 ) WRITE ( 10 , REC = IRECIN ) I2IX
		    IRECIN = IRECN
		END IF
		IRMOD = 1 
		I2IX(IND) = I2ZERO
  100	    CONTINUE
	    LASTAD = IAD 
	    I2IX(IND) = IHS
	    RETURN 
	END IF 
	END
